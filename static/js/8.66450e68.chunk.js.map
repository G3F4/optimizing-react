{"version":3,"sources":["components/item/fields/CheckboxControl.tsx","components/item/fields/RadioGroupControl.tsx","components/item/fields/SelectControl.tsx","components/item/fields/TextControl.tsx","components/item/useItem.tsx","components/item/Item.tsx","components/list/header/ListHeader.tsx","components/list/useList.tsx","components/list/List.tsx"],"names":["CheckboxControl","checked","label","onChange","FormControlLabel","control","Checkbox","RadioGroupControl","value","options","name","FormControl","FormLabel","component","RadioGroup","map","key","toString","Radio","color","labelPlacement","SelectControl","InputLabel","htmlFor","Select","inputProps","id","text","MenuItem","TextControl","placeholder","type","TextField","useItem","invitation","updateInvitation","updateGuestInfo","useCallback","guestInfo","onNameChange","event","produce","draft","target","onLastNameChange","lastName","onPlusOneChange","plusOne","onSexChange","sex","parseInt","onTableChange","table","onSendByChange","_event","sendBy","SEND_BY_RADIO_GROUP","GENDERS","useItemStyles","makeStyles","theme","createStyles","wrapper","margin","spacing","padding","Item","props","classes","Paper","className","container","item","xs","sm","md","memo","AppBar","position","variant","style","flexGrow","getNode","selector","document","querySelector","generateInvitation","_","firstName","random","number","min","max","boolean","timer","Date","now","useList","invitationsCount","useContext","AppContext","useState","Array","from","length","invitations","setInvitations","useEffect","time","timesNode","timeNode","timeNodeClone","cloneNode","textContent","prepend","children","forEach","child","index","fontSize","addRenderTime","draftValue","findIndex","ItemMemo","useListStyles","root","maxHeight","overflow","width","expensiveCalculations","_v","k","pure","calculationsCost","ItemComponent","useMemo"],"mappings":"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","file":"static/js/8.66450e68.chunk.js","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport React, { ChangeEvent } from 'react';\n\nexport interface CheckboxControlControlProps {\n  checked: boolean;\n  label: string;\n\n  onChange(event: ChangeEvent<HTMLInputElement>): void;\n}\n\nconst CheckboxControl: React.FC<CheckboxControlControlProps> = ({\n  checked,\n  label,\n  onChange,\n}) => (\n  <div>\n    <FormControlLabel\n      control={<Checkbox checked={checked} onChange={onChange} />}\n      label={label}\n    />\n  </div>\n);\n\nexport default CheckboxControl;\n","import FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport React, { ChangeEvent } from 'react';\n\nexport interface RadioGroupControlProps {\n  value: string;\n  label: string;\n  name: string;\n  options: string[];\n\n  onChange(_event: ChangeEvent<{}>, value: string): void;\n}\n\nconst RadioGroupControl: React.FC<RadioGroupControlProps> = ({\n  value,\n  options,\n  label,\n  name,\n  onChange,\n}) => (\n  <FormControl>\n    <FormLabel component=\"legend\">{label}</FormLabel>\n    <RadioGroup value={value} name={name} onChange={onChange}>\n      {options.map((label, key) => (\n        <FormControlLabel\n          key={key}\n          value={key.toString()}\n          label={label}\n          control={<Radio color=\"primary\" />}\n          labelPlacement=\"start\"\n        />\n      ))}\n    </RadioGroup>\n  </FormControl>\n);\n\nexport default RadioGroupControl;\n","import FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport React, { ChangeEvent } from 'react';\n\nexport interface SelectControlProps {\n  value: number;\n  label: string;\n  name: string;\n  options: string[];\n\n  onChange(\n    event: ChangeEvent<{ name?: string | undefined; value: unknown }>,\n  ): void;\n}\n\nconst SelectControl: React.FC<SelectControlProps> = ({\n  label,\n  value,\n  name,\n  options,\n  onChange,\n}) => (\n  <FormControl>\n    <InputLabel htmlFor={name}>{label}</InputLabel>\n    <Select\n      value={value}\n      onChange={onChange}\n      inputProps={{\n        name,\n        id: name,\n      }}\n    >\n      {options.map((text, value) => (\n        <MenuItem key={value} value={value}>\n          {text}\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n);\n\nexport default SelectControl;\n","import TextField from '@material-ui/core/TextField';\nimport React, { ChangeEvent } from 'react';\n\nexport interface TextControlProps {\n  label: string;\n  placeholder: string;\n  value: string | number;\n  type?: string;\n\n  onChange(event: ChangeEvent<HTMLInputElement>): void;\n}\n\nconst TextControl: React.FC<TextControlProps> = ({\n  label,\n  value,\n  placeholder,\n  type,\n  onChange,\n}) => (\n  <div>\n    <TextField\n      label={label}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      type={type}\n    />\n  </div>\n);\n\nexport default TextControl;\n","import produce from 'immer';\nimport { ChangeEvent, useCallback } from 'react';\nimport { GuestInfo, Invitation } from '../list/useList';\n\ninterface UseItem {\n  (\n    invitation: Invitation,\n    updateInvitation: (id: string, guestInfo: GuestInfo) => void,\n  ): {\n    invitation: Invitation;\n\n    onNameChange(event: ChangeEvent<HTMLInputElement>): void;\n    onLastNameChange(event: ChangeEvent<HTMLInputElement>): void;\n    onPlusOneChange(event: ChangeEvent<HTMLInputElement>): void;\n    onSexChange(\n      event: ChangeEvent<{ name?: string | undefined; value: unknown }>,\n    ): void;\n    onTableChange(event: ChangeEvent<HTMLInputElement>): void;\n    onSendByChange(_event: ChangeEvent<{}>, value: string): void;\n  };\n}\n\nconst useItem: UseItem = (invitation, updateInvitation) => {\n  const { id } = invitation;\n  const updateGuestInfo = useCallback(\n    (guestInfo: GuestInfo) => {\n      updateInvitation(id, guestInfo);\n    },\n    [id, updateInvitation],\n  );\n  const onNameChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.name = event.target.value;\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n  const onLastNameChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.lastName = event.target.value;\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n  const onPlusOneChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.plusOne = event.target.checked;\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n  const onSexChange = useCallback(\n    (event: ChangeEvent<{ name?: string | undefined; value: unknown }>) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.sex = parseInt(event.target.value as string, 10);\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n  const onTableChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.table = parseInt(event.target.value, 10);\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n  const onSendByChange = useCallback(\n    (_event: ChangeEvent<{}>, value: string) => {\n      updateGuestInfo(\n        produce(invitation.guestInfo, draft => {\n          draft.sendBy = parseInt(value, 10);\n        }),\n      );\n    },\n    [updateGuestInfo, invitation.guestInfo],\n  );\n\n  return {\n    invitation,\n    onLastNameChange,\n    onNameChange,\n    onPlusOneChange,\n    onSendByChange,\n    onSexChange,\n    onTableChange,\n  };\n};\n\nexport default useItem;\n","import Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport React, { FC } from 'react';\nimport { GuestInfo, Invitation } from '../list/useList';\nimport CheckboxControl from './fields/CheckboxControl';\nimport RadioGroupControl from './fields/RadioGroupControl';\nimport SelectControl from './fields/SelectControl';\nimport TextControl from './fields/TextControl';\nimport useItem from './useItem';\n\nconst SEND_BY_RADIO_GROUP = ['E-mail', 'Fax', 'Postman', 'Owl'];\nconst GENDERS = ['Man', 'Woman', 'Gender'];\n\nconst useItemStyles = makeStyles(theme =>\n  createStyles({\n    wrapper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ItemProps {\n  invitation: Invitation;\n\n  updateInvitation(id: string, guestInfo: GuestInfo): void;\n}\n\nconst Item: FC<ItemProps> = props => {\n  const {\n    invitation,\n    onNameChange,\n    onLastNameChange,\n    onPlusOneChange,\n    onSexChange,\n    onTableChange,\n    onSendByChange,\n  } = useItem(props.invitation, props.updateInvitation);\n  const classes = useItemStyles();\n  const { guestInfo } = invitation;\n  const { name, lastName, sex, plusOne, sendBy, table } = guestInfo;\n\n  return (\n    <Paper className={classes.wrapper}>\n      <Typography component=\"h5\">{`${name} ${lastName}`}</Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6} md={4}>\n          <TextControl\n            label=\"Name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={onNameChange}\n          />\n          <TextControl\n            label=\"Last name\"\n            placeholder=\"Enter last name\"\n            value={lastName}\n            onChange={onLastNameChange}\n          />\n          <TextControl\n            label=\"Table\"\n            placeholder=\"Enter table number\"\n            type=\"number\"\n            value={table}\n            onChange={onTableChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <SelectControl\n            label=\"Sex\"\n            name=\"sex\"\n            value={sex}\n            options={GENDERS}\n            onChange={onSexChange}\n          />\n          <CheckboxControl\n            label=\"Plus one\"\n            checked={plusOne}\n            onChange={onPlusOneChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <RadioGroupControl\n            name=\"sendBy\"\n            label=\"Send by\"\n            value={sendBy.toString()}\n            options={SEND_BY_RADIO_GROUP}\n            onChange={onSendByChange}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Item;\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport React, { memo } from 'react';\n\nconst ListHeader: React.FC = () => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h6\">Invitations</Typography>\n      <div style={{ flexGrow: 1 }} />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default memo(ListHeader);\n","import { name, random } from 'faker';\nimport produce from 'immer';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport AppContext from '../../AppContext';\n\nconst getNode = (selector: string) => document.querySelector(selector);\n\nconst addRenderTime = (time: number): void => {\n  const timesNode = getNode('#times');\n  const timeNode = getNode('#time');\n  const timeNodeClone = timeNode && timeNode.cloneNode(true);\n\n  if (timesNode && timeNodeClone) {\n    timeNodeClone.textContent = `${time} ms`;\n    timesNode.prepend(timeNodeClone);\n    Array.from(timesNode.children).forEach((child, index) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (child as any).style.fontSize = `${48 - index * 4}px`;\n    });\n  }\n};\n\nexport interface Invitation {\n  id: string;\n  guestInfo: GuestInfo;\n}\n\nexport interface GuestInfo {\n  name: string;\n  lastName: string;\n  table: number;\n  plusOne: boolean;\n  sex: number;\n  sendBy: number;\n}\n\nconst generateInvitation = (_: number, id: number): Invitation => ({\n  id: id.toString(),\n  guestInfo: {\n    name: name.firstName(random.number({ min: 0, max: 1 })),\n    lastName: name.lastName(random.number({ min: 0, max: 1 })),\n    table: random.number({ min: 1, max: 10 }),\n    plusOne: random.boolean(),\n    sex: random.number({ min: 0, max: 2 }),\n    sendBy: random.number({ min: 1, max: 4 }),\n  },\n});\n\nlet timer = Date.now();\n\nexport type UseList = [\n  Invitation[],\n  (id: string, guestInfo: GuestInfo) => void,\n];\n\nconst useList = (): UseList => {\n  const {\n    value: { invitationsCount },\n  } = useContext(AppContext);\n  const [invitations, setInvitations] = useState(\n    Array.from({ length: invitationsCount }, generateInvitation),\n  );\n\n  useEffect(() => {\n    addRenderTime(Date.now() - timer);\n  }, [invitations]);\n\n  useEffect(() => {\n    setInvitations(\n      Array.from({ length: invitationsCount }, generateInvitation),\n    );\n  }, [invitationsCount]);\n\n  const updateInvitation = useCallback((id: string, guestInfo: GuestInfo) => {\n    timer = Date.now();\n    setInvitations(value =>\n      produce(value, draftValue => {\n        draftValue[\n          draftValue.findIndex(item => item.id === id)\n        ].guestInfo = guestInfo;\n      }),\n    );\n  }, []);\n\n  return [invitations, updateInvitation];\n};\n\nexport default useList;\n","import Paper from '@material-ui/core/Paper';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport React, { memo, useContext, useMemo } from 'react';\nimport AppContext from '../../AppContext';\nimport Item from '../item/Item';\nimport ListHeader from './header/ListHeader';\nimport useList from './useList';\n\nconst ItemMemo = memo(Item);\n\nconst useListStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      maxHeight: '100%',\n      overflow: 'scroll',\n      width: '100%',\n    },\n  }),\n);\n\nconst expensiveCalculations = (length: number): number => {\n  return Array.from({ length }, (_v, k) => k).map(expensiveCalculations).length;\n};\n\nfunction List() {\n  const [invitations, updateInvitation] = useList();\n  const {\n    value: { memo, pure, calculationsCost },\n  } = useContext(AppContext);\n  const ItemComponent = pure ? ItemMemo : Item;\n  const classes = useListStyles();\n  const memoizedExpensiveCalculations = useMemo(() => {\n    return expensiveCalculations(calculationsCost);\n  }, [calculationsCost]);\n\n  return (\n    <Paper className={classes.root}>\n      <ListHeader />\n      <div>\n        {invitations.map(invitation => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const work = memo\n            ? memoizedExpensiveCalculations\n            : expensiveCalculations(calculationsCost);\n\n          return (\n            <ItemComponent\n              key={invitation.id}\n              invitation={invitation}\n              updateInvitation={updateInvitation}\n            />\n          );\n        })}\n      </div>\n    </Paper>\n  );\n}\n\nexport default memo(List);\n"],"sourceRoot":""}