{"version":3,"sources":["components/layout/Layout.tsx","components/App.tsx","AppContext.ts"],"names":["LazyList","lazy","LazySidebar","useLayoutStyles","makeStyles","theme","createStyles","root","minHeight","maxHeight","minWidth","margin","spacing","grid","overflow","sidebar","display","alignItems","justifyContent","list","overflowY","listContent","Layout","classes","className","container","item","xs","sm","md","lg","fallback","Loader","App","useState","memo","tinyParams","window","location","href","pure","calculationsCost","DEFAULT_CALCULATIONS_COST","invitationsCount","DEFAULT_INVITATION_COUNT","context","setContext","toggleMemo","useCallback","togglePure","handleInvitationsCountChange","length","parseInt","handleCalculationsCostChange","AppContext","Provider","value","onInvitationsCountChange","onCalculationsCostChange","createContext","_cost","_length","Function"],"mappings":"kQAOMA,EAAWC,gBAAK,kBAAM,+DACtBC,EAAcD,gBAAK,kBAAM,wDAEzBE,EAAkBC,KAAW,SAAAC,GAAK,OACtCC,IAAa,CACXC,KAAM,CACJC,UAAW,OACXC,UAAW,OACXC,SAAU,OACVC,OAAQN,EAAMO,QAAQ,IAExBC,KAAM,CACJL,UAAW,OACXC,UAAW,OACXK,SAAU,UAEZC,QAAS,CACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,KAAM,CACJH,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBV,UAAW,QACXC,UAAW,QACXW,UAAW,UAEbC,YAAa,QAyBFC,EArBI,WACjB,IAAMC,EAAUpB,IAEhB,OACE,kBAAC,IAAD,CAAOqB,UAAWD,EAAQhB,MACxB,kBAAC,IAAD,CAAMkB,WAAS,EAACb,QAAS,EAAGY,UAAWD,EAAQV,MAC7C,kBAAC,IAAD,CAAMa,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGN,UAAWD,EAAQR,SACxD,kBAAC,WAAD,CAAUgB,SAAU,kBAACC,EAAA,EAAD,4BAClB,kBAAC9B,EAAD,QAGJ,kBAAC,IAAD,CAAMwB,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIN,UAAWD,EAAQJ,MACzD,kBAAC,WAAD,CAAUY,SAAU,kBAACC,EAAA,EAAD,yBAClB,kBAAChC,EAAD,W,yjBCaGiC,UAzDC,WAAO,IAAD,EACUC,mBAA0B,CACtDC,KAAMC,YAAWC,OAAOC,SAASC,MAAMJ,OAAQ,EAC/CK,KAAMJ,YAAWC,OAAOC,SAASC,MAAMC,OAAQ,EAC/CC,iBAAkBC,IAClBC,iBAAkBC,MALA,mBACbC,EADa,KACJC,EADI,KAQdC,EAAaC,uBAAY,WAC7BF,EAAW,EAAD,GACLD,EADK,CAERV,MAAOU,EAAQV,UAEhB,CAACU,EAASC,IAEPG,EAAaD,uBAAY,WAC7BF,EAAW,EAAD,GACLD,EADK,CAERL,MAAOK,EAAQL,UAEhB,CAACK,EAASC,IAEPI,EAA+BF,uBACnC,SAACG,GACCL,EAAW,EAAD,GACLD,EADK,CAERF,iBAAkBS,SAASD,EAAQ,SAGvC,CAACN,EAASC,IAGNO,EAA+BL,uBACnC,SAACP,GACCK,EAAW,EAAD,GACLD,EADK,CAERJ,wBAGJ,CAACI,EAASC,IAGZ,OACE,kBAACQ,EAAA,EAAWC,SAAZ,CACEC,MAAO,CACLA,MAAOX,EACPE,WAAYA,EACZE,WAAYA,EACZQ,yBAA0BP,EAC1BQ,yBAA0BL,IAG5B,kBAAC,EAAD,S,gCC7DN,+EAEaT,EAA2B,GAC3BF,EAA4B,GAkBnCY,EAAaK,wBAA+B,CAChDH,MAAO,CACLhB,MAAM,EACNL,MAAM,EACNQ,iBAAkBC,EAClBH,iBAAkBC,GAGpBgB,yBARgD,SAQvBE,KAIzBH,yBAZgD,SAYvBI,KAGzBZ,WAAYa,SACZf,WAAYe,WAGCR","file":"static/js/7.738e04e9.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid/Grid';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport React, { FC, lazy, Suspense } from 'react';\nimport Loader from '../loader/Loader';\n\nconst LazyList = lazy(() => import('../list/List'));\nconst LazySidebar = lazy(() => import('../sidebar/Sidebar'));\n\nconst useLayoutStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      minHeight: '100%',\n      maxHeight: '100%',\n      minWidth: '100%',\n      margin: theme.spacing(1),\n    },\n    grid: {\n      minHeight: '100%',\n      maxHeight: '100%',\n      overflow: 'hidden',\n    },\n    sidebar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    list: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      maxHeight: '100vh',\n      overflowY: 'scroll',\n    },\n    listContent: {},\n  }),\n);\n\nconst Layout: FC = () => {\n  const classes = useLayoutStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={2} className={classes.grid}>\n        <Grid item xs={5} sm={4} md={3} lg={2} className={classes.sidebar}>\n          <Suspense fallback={<Loader>Loading sidebar...</Loader>}>\n            <LazySidebar />\n          </Suspense>\n        </Grid>\n        <Grid item xs={7} sm={8} md={9} lg={10} className={classes.list}>\n          <Suspense fallback={<Loader>Loading list...</Loader>}>\n            <LazyList />\n          </Suspense>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Layout;\n","import React, { FC, useCallback, useState } from 'react';\nimport tinyParams from 'tiny-params';\nimport AppContext, {\n  AppContextValue,\n  DEFAULT_CALCULATIONS_COST,\n  DEFAULT_INVITATION_COUNT,\n} from '../AppContext';\nimport Layout from './layout/Layout';\n\nconst App: FC = () => {\n  const [context, setContext] = useState<AppContextValue>({\n    memo: tinyParams(window.location.href).memo || false,\n    pure: tinyParams(window.location.href).pure || false,\n    calculationsCost: DEFAULT_CALCULATIONS_COST,\n    invitationsCount: DEFAULT_INVITATION_COUNT,\n  });\n\n  const toggleMemo = useCallback(() => {\n    setContext({\n      ...context,\n      memo: !context.memo,\n    });\n  }, [context, setContext]);\n\n  const togglePure = useCallback(() => {\n    setContext({\n      ...context,\n      pure: !context.pure,\n    });\n  }, [context, setContext]);\n\n  const handleInvitationsCountChange = useCallback(\n    (length: string) => {\n      setContext({\n        ...context,\n        invitationsCount: parseInt(length, 10),\n      });\n    },\n    [context, setContext],\n  );\n\n  const handleCalculationsCostChange = useCallback(\n    (calculationsCost: number) => {\n      setContext({\n        ...context,\n        calculationsCost,\n      });\n    },\n    [context, setContext],\n  );\n\n  return (\n    <AppContext.Provider\n      value={{\n        value: context,\n        toggleMemo: toggleMemo,\n        togglePure: togglePure,\n        onInvitationsCountChange: handleInvitationsCountChange,\n        onCalculationsCostChange: handleCalculationsCostChange,\n      }}\n    >\n      <Layout />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import { createContext } from 'react';\n\nexport const DEFAULT_INVITATION_COUNT = 10;\nexport const DEFAULT_CALCULATIONS_COST = 15;\n\nexport interface AppContextValue {\n  pure: boolean;\n  memo: boolean;\n  invitationsCount: number;\n  calculationsCost: number;\n}\n\nexport interface AppContextProps {\n  value: AppContextValue;\n\n  onInvitationsCountChange(length: string): void;\n  onCalculationsCostChange(cost: number): void;\n  togglePure(): void;\n  toggleMemo(): void;\n}\n\nconst AppContext = createContext<AppContextProps>({\n  value: {\n    pure: false,\n    memo: false,\n    invitationsCount: DEFAULT_INVITATION_COUNT,\n    calculationsCost: DEFAULT_CALCULATIONS_COST,\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onCalculationsCostChange(_cost: number) {\n    return;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onInvitationsCountChange(_length: string) {\n    return;\n  },\n  togglePure: Function,\n  toggleMemo: Function,\n});\n\nexport default AppContext;\n"],"sourceRoot":""}